""""
    author  jianghua
    makedate 2024-09-04
"""
import cv2
import numpy as np
from PIL import Image
import matplotlib.pyplot as plt


class ImageProcess:
    def __init__(self, path):
        self.path = path

    def grap_scale_one(self):
        """
        灰度化1
        :return: 灰度化后的图片
        """
        img = cv2.imread(self.path)
        row, col = img.shape[:2]
        grap_img = np.zeros([row, col], img.dtype)
        for r in range(row):
            for c in range(col):
                _img = img[r, c]
                grap_img[r, c] = (
                    _img[0] * 0.11 + _img[1] * 0.59 + _img[2] * 0.3
                )  # RGB 0.3 0,59 0.11 BGR?
        return grap_img

    def binarization_one(self):
        """
        二值化1
        :return: 二值化后的图片
        """
        grap_img = self.grap_scale_one() / 255
        row, col = grap_img.shape
        for r in range(row):
            for c in range(col):
                if grap_img[r, c] < 0.5:
                    grap_img[r, c] = 0
                else:
                    grap_img[r, c] = 1
        return grap_img

    def gray_scale_two(self):
        # 打开图像
        with Image.open(self.path) as img:
            # 转换为灰度图
            return img.convert("L")

    def binarize_two(self, threshold=128):
        # 打开图像
        with Image.open(self.path) as img:
            # 转换为灰度图
            gray_img = img.convert("L")
            # 二值化处理
            binary_img = gray_img.point(lambda x: 0 if x < threshold else 255)
            return binary_img

    def gray_scale_three(self):
        return cv2.cvtColor(cv2.imread(self.path), cv2.COLOR_BGR2GRAY)

    def binarize_three(self):
        gray_image = self.gray_scale_three()
        _, binary_image = cv2.threshold(gray_image, 127, 255, cv2.THRESH_BINARY)
        return binary_image


if __name__ == "__main__":
    obj = ImageProcess("lenna.png")
    cv2.imshow("grap",obj.grap_scale_one())
    cv2.imshow("binarization", obj.binarization_one())
    cv2.waitKey(0)
    # grap_image = obj.gray_scale_two()
    # binarize_img = obj.binarize_two()
    # grap_image = obj.gray_scale_three()
    # print(grap_image)
    # binarize_img = obj.binarize_three()
    # plt.subplot(221)
    # plt.imshow(grap_image, cmap="gray")
    # plt.subplot(222)
    # plt.imshow(binarize_img, cmap="gray")
    # plt.show()
