# 实现高斯噪声

import cv2
import numpy as np
from PIL import Image
from skimage import util
import random


# 方法-调接口
# img = cv.imread("lenna.png")
# noise_gs_img=util.random_noise(img,mode='gaussian')
#
# cv.imshow("source", img)
# cv.imshow("lenna",noise_gs_img)
# cv.imwrite('lenna_noise.png',noise_gs_img*255)
# cv.waitKey(0)
# cv.destroyAllWindows()

# 方法-手动
def GaussianNoise(src,means,sigma,percetage):
    NoiseImg=src
    NoiseNum=int(percetage*src.shape[0]*src.shape[1])
    for i in range(NoiseNum):
        randX=random.randint(0,src.shape[0]-1)
        randY=random.randint(0, src.shape[1]-1)
        NoiseImg[randX, randY] = NoiseImg[randX, randY] + random.gauss(means, sigma)
        if  NoiseImg[randX, randY]< 0:
            NoiseImg[randX, randY]=0
        elif NoiseImg[randX, randY]>255:
            NoiseImg[randX, randY]=255
    return NoiseImg

img = cv2.imread('lenna.png',0)
img1 = GaussianNoise(img,1,5,0.9)
img = cv2.imread('lenna.png')
img2 = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
#cv2.imwrite('lenna_GaussianNoise.png',img1)
cv2.imshow('source',img2)
cv2.imshow('lenna_GaussianNoise',img1)
cv2.waitKey(0)
