import numpy as np
import matplotlib.pyplot as plt

class NoiseInterface:
    def add_noise(self, data, noise_type, **kwargs):
        if noise_type == "gaussian":
            return self.add_gaussian_noise(data, **kwargs)
        elif noise_type == "salt_and_pepper":
            return self.add_salt_and_pepper_noise(data, **kwargs)
        else:
            raise ValueError(f"Unknown noise type: {noise_type}")

    def add_gaussian_noise(self, data, mean=0, std_dev=0.1):
        # 前面实现的添加高斯噪声的代码
        noise = np.random.normal(mean, std_dev, data.shape)
        return data + noise

    def add_salt_and_pepper_noise(self, image, salt_prob=0.05, pepper_prob=0.05):
        # 前面实现的添加椒盐噪声的代码
        noisy_image = np.copy(image)
        height, width = noisy_image.shape[:2]
        num_salt = np.ceil(salt_prob * image.size)
        num_pepper = np.ceil(pepper_prob * image.size)

        coords_salt = [np.random.randint(0, i - 1, int(num_salt)) for i in image.shape]
        noisy_image[tuple(coords_salt)] = 255

        coords_pepper = [np.random.randint(0, i - 1, int(num_pepper)) for i in image.shape]
        noisy_image[tuple(coords_pepper)] = 0

        return noisy_image

data = np.random.rand(100, 100)

noise_interface = NoiseInterface()

#高斯噪声
# 示例数据，这里以一条简单的直线为例
x = np.linspace(0, 10, 100)
y = 2 * x + 5

# 调用接口添加高斯噪声
noisy_y = noise_interface.add_noise(y, "gaussian", mean=0, std_dev=0.1)

#noisy_y = add_gaussian_noise(y)
# 绘制原始数据和添加噪声后的数据
plt.plot(x, y, label='Original data')
plt.plot(x, noisy_y, label='Noisy data')
plt.legend()
plt.xlabel('X')
plt.ylabel('Y')
plt.title('Adding Gaussian Noise')
plt.show()

#椒盐噪声
# 示例图像，这里创建一个简单的灰度图像
image = np.zeros((100, 100), dtype=np.uint8)
image[30:70, 30:70] = 128

# 调用接口添加椒盐噪声
noisy_data_salt_pepper = noise_interface.add_noise(data, "salt_and_pepper", salt_prob=0.1, pepper_prob=0.1)

# 显示原始图像和添加噪声后的图像
fig, axes = plt.subplots(1, 2)
axes[0].imshow(image, cmap='gray')
axes[0].set_title('Original Image')
axes[1].imshow(noisy_data_salt_pepper, cmap='gray')
axes[1].set_title('Noisy Image')
plt.show()
