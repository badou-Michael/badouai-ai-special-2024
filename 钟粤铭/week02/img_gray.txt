import cv2
import numpy as np

img = cv2.imread('./robot.jpg')
print(img[40][389])
# print(f"灰度化前原始值{img}")
height, width = img.shape[:2]
img_gray = np.zeros((height, width), img.dtype)
print(img_gray.shape)
# 灰度化
for i in range(height):
    for j in range(width):
        m = img[i][j]
        img_gray[i, j] = int(m[0] * 0.11 + m[1] * 0.59 + m[2] * 0.3)
# print(f"灰度化后结果{img_gray}")

# 灰度化效果展示
cv2.imshow('new_window', img_gray)
cv2.waitKey(1000)  # 图像展示1秒
cv2.destroyWindow('new_window')

# 二值化
rows, columns = img_gray.shape
for i in range(rows):
    for j in range(columns):
        a = img_gray[i, j] / 255
        if a <= 0.5:
            img_gray[i, j] = 0
        else:
            img_gray[i,j] = 1
# print(f"归一化结果{img_gray}")
cv2.imshow('new_window', img_gray)
cv2.waitKey(1000)  # 图像展示1秒
cv2.destroyWindow('new_window')


*****************************************************************************************************

from skimage.color import rgb2gray
import matplotlib.pyplot as plt
import numpy as np


plt.subplot(221)
img = plt.imread("./robot.jpg")
# 输出原图
plt.imshow(img)
#调用接口实现灰度化
img_gray = rgb2gray(img)
plt.subplot(222)
# 输出灰度化图像
plt.imshow(img_gray, cmap='gray')
# 调用接口实现归一化
img_binary = np.where(img_gray >= 0.5, 1, 0)
plt.subplot(223)
# 输出归一化图像
plt.imshow(img_binary, cmap='gray')
plt.show()
