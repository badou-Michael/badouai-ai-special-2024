from google.colab import drive
drive.mount('/content/drive')


from skimage.color import rgb2gray
from PIL import Image
from google.colab.patches import cv2_imshow
import numpy as np
import matplotlib.pyplot as plt
import cv2



# 手动BGR图像灰度化（Gray = B*0.11 + G*0.59 + R*0.3）
img = cv2.imread('/content/drive/My Drive/lenna.png') # opencv读取的图像是BGR通道, 读取的数值是传统范围的0-255
h,w = img.shape[0:2]
img_gray = np.zeros([h,w], img.dtype)
for i in range(h):
  for j in range(w):
    pix = img[i,j]
    img_gray[i,j] = int(pix[0]*0.11 + pix[1]*0.59 + pix[2]*0.3)

print(img_gray)
cv2_imshow(img_gray)



plt.figure(figsize=(10, 10))
plt.subplot(131)
img = plt.imread('/content/drive/My Drive/lenna.png') # matplotlib.pyplot读取的是正常的RGB通道，但对读取的数值范围归一化为0-1
plt.imshow(img)



# 针对matplot读取，调用rgb2gray灰度化; 针对opencv读取，cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
# img = cv2.imread('/content/drive/My Drive/lenna.png')
# img_gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
# cv2_imshow(img_gray)
# print(img)
# print(img_gray)

img = plt.imread('/content/drive/My Drive/lenna.png')
img_gray = rgb2gray(img)
plt.subplot(132)
plt.imshow(img_gray, cmap='gray') # camp,plt参数，用来规定灰度级别，防止出现假灰度
print(img)
print(img_gray)



# 手动二值化 - 基于plt读取的img
rows,cols = img_gray.shape
img_binary = np.zeros([rows, cols], img_gray.dtype)
for i in range(rows):
  for j in range(cols):
    pix = img_gray[i, j]
    if pix <= 0.5:
        img_binary[i, j] = 0
    else:
        img_binary[i, j] = 1
print(img_binary)
plt.imshow(img_binary, cmap='gray')



# 调用np.where二值化 - 基于plt读取的img
img_binary = np.where(img_gray <= 0.5, 0, 1)
print(img_binary)
plt.subplot(133)
plt.imshow(img_binary, cmap='gray')
plt.show()
